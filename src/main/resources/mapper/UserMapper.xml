<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mtbatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lcomputerstudy.example.mapper.UserMapper">

	<select id="readAuthorities" parameterType="String" resultType="org.springframework.security.core.authority.SimpleGrantedAuthority">
		SELECT					u_auth
		FROM						userauth
		WHERE					1=1
		AND							u_id = #{username}	
	</select>
	
	<select id="readUser" parameterType="String" resultType="User">
		SELECT					u_id		as username,
								u_password	as password,
								u_name		as name,
								u_phone		as phone,
								u_isAccountNonExpired	as isAccountNonExpired,
								u_isAccountNonLocked 	as isAccountNonLocked,
								u_isCredentialNonExpired	as isCredentialNonExpired,
								u_isEnabled				as isEnabled
		FROM			userlist
		WHERE			1=1
		AND				u_id = #{username}
	</select>
	
	<select id="readUser_refresh" parameterType="String" resultType="UserInfo">
		SELECT				u_id
									u_name
									u_phone
		FROM				userlist
		WHERE				1=1
		AND						u_id = #{username}
	</select>
	
	<select id="readAuthorities_refresh" parameterType="String" resultType="org.springframework.security.core.authority.SimpleGrantedAuthority">
		SELECT				u_auth
		FROM					userauth
		WHERE				1+1
		AND						u_id= #{username}
	</select>
	
	<insert id="createUser" parameterType="User">
		INSERT INTO userlist (
						u_id,
						u_password,
						u_name,
						u_phone,
						u_isAccountNonExpired,
						u_isAccountNonLocked,
						u_isCredentialNonExpired,
						u_isEnabled
		) VALUES (
						#{username},
						#{password},
						#{name},
						#{phone},
						#{isAccountNonExpired},
						#{isAccountNonLocked},
						#{isCredentialsNonExpired},
						#{isEnabled}
		)
	</insert>
	
	<select id="read_user_list" resultType="UserInfo">
		SELECT			ta.u_id		username,
						ta.u_name	name,
						ta.u_phone	phone,
						ta.u_auth	auth
		FROM		userlist ta
		LEFT	join	(
							SELECT		ta.u_id,
													GROUP_CONCAT(ta.u_auth SEPARATOR ",") u_auth
							FROM			userauth ta
							GROUP BY		ta.u_id
						) tb ON ta.u_id = tb.u_id
		
	</select>
	
	<insert id="createAuthority" parameterType="org.springframework.security.core.GrantedAuthority">
		INSERT INTO userauth (
				u_id,
				u_auth
		) VALUES
				<foreach item="authority" index="index" collection="authorities" separator=",">
						(#{username}, #{authority.role})
				</foreach>
				ON DUPLICATE KEY
					UPDATE
							u_id= #{username}
	</insert>
</mapper>